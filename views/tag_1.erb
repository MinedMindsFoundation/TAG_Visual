<!doctype html>
<meta charset="utf-8">
<html>
<style>
    .bar {
        fill: steelblue;
    }

    .toolTip {
        position: absolute;
        display: none;
        min-width: 80px;
        height: auto;
        background: none repeat scroll 0 0 #ffffff;
        border: 1px solid #6F257F;
        padding: 14px;
        text-align: center;
        }
</style>



<head>
    
    <h1> </h1>
</head>

<body>
    <div></div>
    <script src="http://d3js.org/d3.v4.min.js"></script>
    <script>
    
        //set the dimensions and margins of the graph
        var margin = {
                top: 20,
                right: 20,
                bottom: 30,
                left: 320,
            },
            width = 1200- margin.left - margin.right,
            height = 600 - margin.top - margin.bottom;

        // set the ranges
        var y = d3.scaleBand()
            .range([height, 0])
            .padding(0.1);

        var x = d3.scaleLinear()
            .range([0, width]);

        // append the svg object to the body of the page
        // append a 'group' element to 'svg'
        // moves the 'group' element to the top left margin
        var svg = d3.select("body").append("svg")
            .attr("width", width + margin.left + margin.right)
            .attr("height", height + margin.top + margin.bottom)
            .append("g")
            .attr("transform",
                "translate(" + margin.left + "," + margin.top + ")");
        
        var tooltip = d3.select("body").append("div").attr("class", "toolTip");

        d3.csv("csv/r_X_csv.csv", function(error, data) {
            // console.log("data", data)
        var myData = [];
        var myArr = [];
        var bidArr = [];
        var productDetails = {}
        var currentNetCostByProduct = [];
            data.forEach(function(d) {
                
                if (d.generic_name != "") {
                    productDetails["id"] = (d.id);
                    productDetails["generic_name"] = (d.generic_name);
                   // currentNetCostByProduct.push(productDetails);
                };
                if (d.priority == "CURRENT #1") {
                    productDetails["current_manufacturer"] = (d.manufacturer_code);
                    productDetails["netCost"] = (d.net_cost);
                    currentNetCostByProduct.push(productDetails);
                    bidArr.push(parseFloat(d.net_cost));
                    productDetails = {};
                };
            });
           console.log("currentNetCostByProduct", currentNetCostByProduct);
        
// Scale the range of the data in the domains
        x.domain([0, d3.max(bidArr)
        ])
        y.domain(currentNetCostByProduct.map(function(d) {
            console.log("id", d.id);
            return d.id;
        }));
        //y.domain([0, d3.max(data, function(d) { return d.sales; })]);

        // append the rectangles for the bar chart
        svg.selectAll(".bar")
            .data(currentNetCostByProduct)
            .enter().append("rect")
            .attr("class", "bar")
            //.attr("x", function(d) { return x(d.sales); })
            .attr("width", function(d) {
                //console.log("d", d.bid)
                return x(d.netCost);
            })
            .attr("y", function(d) {
                //console.log("d", d.medicine)
                return y(d.id);
            })
            .attr("height", y.bandwidth())
            .on("mouseover", function(d){
            tooltip
              .style("left", d3.event.pageX - 50 + "px")
              .style("top", d3.event.pageY - 70 + "px")
              .style("display", "inline-block")
              .html( "Manufacturer Info" + "<br>" + (d.current_manufacturer) + "<br>" + (d.generic_name) + "<br>" + (d.netCost));
        })
    		.on("mouseout", function(d){ tooltip.style("display", "none");});


        // add the x Axis
        svg.append("g")
            .attr("transform", "translate(0," + height + ")")
            .call(d3.axisBottom(x));

        // add the y Axis
        svg.append("g")
            .call(d3.axisLeft(y));
 });            
    </script>
</body>

</html>